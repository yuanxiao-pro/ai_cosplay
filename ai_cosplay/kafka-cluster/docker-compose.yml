version: '3.8'

services:
  # Kafka 节点 1
  kafka1:
    image: bitnami/kafka:latest
    container_name: kafka-cluster-node1
    hostname: kafka1
    ports:
      - "19092:9092"  # 客户端连接端口
      - "19093:9093"  # Controller端口
      - "19999:9999"  # JMX端口
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_KRAFT_CLUSTER_ID: "enterprise-kafka-cluster-001"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9093,3@kafka3:9093,4@kafka4:9093,5@kafka5:9093"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka1:9092"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
    volumes:
      - kafka1-data:/opt/kafka/data
      - kafka1-logs:/opt/kafka/logs
    networks:
      - kafka-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/opt/kafka/bin/kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Kafka 节点 2
  kafka2:
    image: bitnami/kafka:latest
    container_name: kafka-cluster-node2
    hostname: kafka2
    ports:
      - "29092:9092"
      - "29093:9093"
      - "29999:9999"
    environment:
      KAFKA_CFG_NODE_ID: 2
      KAFKA_KRAFT_CLUSTER_ID: "enterprise-kafka-cluster-001"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9093,3@kafka3:9093,4@kafka4:9093,5@kafka5:9093"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka2:9092"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
    volumes:
      - kafka2-data:/opt/kafka/data
      - kafka2-logs:/opt/kafka/logs
    networks:
      - kafka-network
    restart: unless-stopped
    depends_on:
      - kafka1
    healthcheck:
      test: ["CMD", "/opt/kafka/bin/kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Kafka 节点 3
  kafka3:
    image: bitnami/kafka:latest
    container_name: kafka-cluster-node3
    hostname: kafka3
    ports:
      - "39092:9092"
      - "39093:9093"
      - "39999:9999"
    environment:
      KAFKA_CFG_NODE_ID: 3
      KAFKA_KRAFT_CLUSTER_ID: "enterprise-kafka-cluster-001"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9093,3@kafka3:9093,4@kafka4:9093,5@kafka5:9093"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka3:9092"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
    volumes:
      - kafka3-data:/opt/kafka/data
      - kafka3-logs:/opt/kafka/logs
    networks:
      - kafka-network
    restart: unless-stopped
    depends_on:
      - kafka1
      - kafka2
    healthcheck:
      test: ["CMD", "/opt/kafka/bin/kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Kafka 节点 4
  kafka4:
    image: bitnami/kafka:latest
    container_name: kafka-cluster-node4
    hostname: kafka4
    ports:
      - "49092:9092"
      - "49093:9093"
      - "49999:9999"
    environment:
      KAFKA_CFG_NODE_ID: 4
      KAFKA_KRAFT_CLUSTER_ID: "enterprise-kafka-cluster-001"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9093,3@kafka3:9093,4@kafka4:9093,5@kafka5:9093"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka4:9092"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
    volumes:
      - kafka4-data:/opt/kafka/data
      - kafka4-logs:/opt/kafka/logs
    networks:
      - kafka-network
    restart: unless-stopped
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    healthcheck:
      test: ["CMD", "/opt/kafka/bin/kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Kafka 节点 5
  kafka5:
    image: bitnami/kafka:latest
    container_name: kafka-cluster-node5
    hostname: kafka5
    ports:
      - "59092:9092"
      - "59093:9093"
      - "59999:9999"
    environment:
      KAFKA_CFG_NODE_ID: 5
      KAFKA_KRAFT_CLUSTER_ID: "enterprise-kafka-cluster-001"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9093,3@kafka3:9093,4@kafka4:9093,5@kafka5:9093"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka5:9092"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
    volumes:
      - kafka5-data:/opt/kafka/data
      - kafka5-logs:/opt/kafka/logs
    networks:
      - kafka-network
    restart: unless-stopped
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - kafka4
    healthcheck:
      test: ["CMD", "/opt/kafka/bin/kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Kafka UI - 集群管理界面
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: enterprise-kafka-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092,kafka2:9092,kafka3:9092,kafka4:9092,kafka5:9092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9999
      DYNAMIC_CONFIG_ENABLED: true
    networks:
      - kafka-network
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - kafka4
      - kafka5
    restart: unless-stopped

  # Kafka Exporter - Prometheus监控
  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    container_name: kafka-exporter
    ports:
      - "9308:9308"
    command:
      - "--kafka.server=kafka1:9092"
      - "--kafka.server=kafka2:9092" 
      - "--kafka.server=kafka3:9092"
      - "--kafka.server=kafka4:9092"
      - "--kafka.server=kafka5:9092"
    networks:
      - kafka-network
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - kafka4
      - kafka5
    restart: unless-stopped

volumes:
  kafka1-data:
    driver: local
  kafka1-logs:
    driver: local
  kafka2-data:
    driver: local
  kafka2-logs:
    driver: local
  kafka3-data:
    driver: local
  kafka3-logs:
    driver: local
  kafka4-data:
    driver: local
  kafka4-logs:
    driver: local
  kafka5-data:
    driver: local
  kafka5-logs:
    driver: local

networks:
  kafka-network:
    external: true 